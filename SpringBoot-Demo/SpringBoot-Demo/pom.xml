<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.licf</groupId>
	<artifactId>demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>springboot</name>
	<description>Demo project for Spring Boot</description>

	<!-- 从spring-boot-starter-parent项目中继承以获得合理的默认值(包含Java 8，UTF-8编码，能够识别application.properties和application.yml类型的文件，同时也能支持profile-specific类型的文件等) -->
	<parent>
		<groupId>org.springframework.boot</groupId>
        <!-- 特殊的starter，它用来提供相关的Maven默认依赖。使用它之后，常用的包依赖可以省去version标签 -->
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
        <!-- 如果需要JDK 11，请勿注释此项。注释此项后默认使用JDK 8 -->
        <!--<java.version>11</java.version>-->
		<!-- 其他公共属性自动继承 spring-boot-starter-parent 配置 -->
		<project.version>1.0.0</project.version>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<shiro.version>1.4.0</shiro.version>
		<shiro-redis.version>3.1.0</shiro-redis.version>
		<swagger2.version>2.9.2</swagger2.version>
		<mybatis.version>1.3.2</mybatis.version>
		<pagehelper.version>1.2.10</pagehelper.version>
		<druid.version>1.1.14</druid.version>
		<common-lang3.version>3.8.1</common-lang3.version>
		<lombok.version>1.18.6</lombok.version>
		<commons-codec.version>1.12</commons-codec.version>
		<google-guava.version>29.0-jre</google-guava.version>
		<hutool.version>4.1.19</hutool.version>
		<easyexcel.version>1.1.1</easyexcel.version>
		<!-- 打包跳过测试 因为测试打包会报错┭┮﹏┭┮ 也可以使用 mvn clean package -DskipTests 命令 -->
		<skipTests>true</skipTests>
	</properties>

	<dependencies>
		<!-- spring boot 核心starters 优先采用SpringBoot的Starters -->
		<!-- 构建Web，包含RESTful风格框架SpringMVC和默认的嵌入式容器Tomcat -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- 通过Spring AOP、AspectJ面向切面编程 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<!--springboot程序测试依赖，如果是自动创建项目默认添加-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- Redis连接池自动管理，提供了一个高度封装的“RedisTemplate”类 后续使用RedisTemplate 替代shiro-redis  -->
<!--		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>-->
        <!-- Spring Boot 热部署 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>

		<!-- 运维支持(健康检查) -->
		<!-- 性能指标、运行信息和应用管理 参见https://blog.csdn.net/canfengli/article/details/79928071 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- 汇总端点信息 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>
		<!-- actuator聚合图形化插件 访问地址 http://127.0.0.1:8080 -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-rest-hal-browser</artifactId>
		</dependency>

		<!-- 数据库相关 -->
		<!-- mysql数据库驱动 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- alibaba的druid数据库连接池 访问地址：http://localhost:8080/druid -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-starter</artifactId>
			<version>${druid.version}</version>
		</dependency>
		<!-- spring.boot.mybatis starter 半自动sql -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>${mybatis.version}</version>
		</dependency>
		<!-- mybatis数据库分页插件 -->
		<dependency>
			<groupId>com.github.pagehelper</groupId>
			<artifactId>pagehelper-spring-boot-starter</artifactId>
			<version>${pagehelper.version}</version>
		</dependency>
		<!-- flyway数据库自动迁移框架 -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>

        <!-- 接口文档相关 -->
		<!-- 添加swagger2 使用新的springfox框架 -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger2.version}</version>
		</dependency>
		<!-- swagger2-UI http://localhost:8080/swagger-ui.html -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger2.version}</version>
		</dependency>

		<!-- lombok代码生成插件 -->
		<!--提供@Slf4j(类上注解@Slf4j后直接使用log对象) @Data(自动生成get set tostring hashcode equals等方法) @AllArgsConstructor(提供一个全参的构造方法)等注解 -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- 权限相关 -->
		<!-- shiro spring. -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<!-- shiro+redis缓存插件 优先使用 可以解决集群的单点登录方案 -->
		<dependency>
			<groupId>org.crazycake</groupId>
			<artifactId>shiro-redis</artifactId>
			<version>${shiro-redis.version}</version>
		</dependency>
		<!-- shiro ehcache缓存 java内存框架 -->
<!--		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-ehcache</artifactId>
			<version>${shiro.version}</version>
		</dependency>-->


		<!--工具类相关-->
		<!-- Apache  commons-lang3工具类-->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${common-lang3.version}</version>
		</dependency>
		<!-- Apache开源组织提供的用于摘要运算、编码解码的包 -->
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>${commons-codec.version}</version>
		</dependency>
		<!-- fastjson阿里巴巴jSON处理器 减少系统开销 使用Spring Boot默认的JackSon -->
<!--		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.13</version>
		</dependency>-->
		<!-- google guava 工具类 -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${google-guava.version}</version>
		</dependency>
        <!-- 阿里巴巴Excel工具类 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>easyexcel</artifactId>
            <version>${easyexcel.version}</version>
        </dependency>
        <!-- 超好用的工具类hutool 推荐使用 -->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>${hutool.version}</version>
        </dependency>

		<!-- 定时任务 -->
		<!-- 引入elastic-job核心模块 -->
		<dependency>
			<groupId>com.dangdang</groupId>
			<artifactId>elastic-job-lite-core</artifactId>
			<version>2.1.5</version>
		</dependency>
		<!-- 使用springframework自定义命名空间时引入 -->
        <dependency>
            <groupId>com.dangdang</groupId>
            <artifactId>elastic-job-lite-spring</artifactId>
            <version>2.1.5</version>
        </dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- 打包jar -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<!-- 创建一个自动可执行的jar或war文件。它可以替换常规的artifact -->
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

            <!-- 代码自动生成插件 -->
            <plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>1.3.2</version>
                <configuration>
                    <configurationFile>src/main/resources/mybatis-generator/generatorConfig.xml</configurationFile>
                    <overwrite>true</overwrite>
                    <verbose>true</verbose>
                </configuration>
            </plugin>
		</plugins>
	</build>

</project>
