#执行java -jar xxx.jar，可以观察到服务端口被设置为8001，也就是默认的开发环境（dev）
#执行java -jar xxx.jar --spring.profiles.active=test，可以观察到服务端口被设置为8002，也就是测试环境的配置（test）
#执行java -jar xxx.jar --spring.profiles.active=prod，可以观察到服务端口被设置为8003，也就是生产环境的配置（prod）
#如果不指定，则默认加载application.yml的配置
spring:
    profiles:
      active: dev
    application:
      name: Spring Boot 2.1 Demo

#spring boot项目健康检查及监控
#访问地址 http://127.0.0.1:8080/browser/index.html#/
management:
  endpoints:
    web:
      exposure:
        include: [info, health, beans, env, metrics, mappings, scheduledtasks, sessions, threaddump, docs, logfile, jolokia] #暴露的端点 docs是web端点
      base-path: /actuator #默认/actuator 不更改可不用配置
      #CORS跨域支持
      cors:
        allowed-origins: http：//example.com
        allowed-methods: GET,PUT,POST,DELETE
  endpoint:
    beans:
      cache:
        time-to-live: 10s #端点缓存响应的时间量
    health:
      show-details: always #详细信息显示给所有用户
#  server:
#    port: 8080 #默认8080
#    address: 127.0.0.1 #配置此项表示不允许远程连接

  #监测
  metrics:
    web:
      server:
        auto-time-requests: true
